swagger: "2.0"
info:
  title: Payments API
  description: API для управления платежами
  version: "1.3.1"
tags:
  - name: Payments
    description: Операции с платежами

paths:
  /payments-v1.3.1/:
    post:
      tags: [Payments]
      summary: Создать новый платёж
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentInput'
      responses:
        201:
          description: Платёж успешно создан
          schema:
            $ref: '#/definitions/Payment'
        400:
          description: Ошибка валидации данных

  /payments-v1.3.1/{payment_id}:
    get:
      tags: [Payments]
      summary: Получить платёж по ID
      parameters:
        - in: path
          name: payment_id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Данные платежа
          schema:
            $ref: '#/definitions/Payment'
        404:
          description: Платёж не найден

    put:
      tags: [Payments]
      summary: Обновить данные платежа
      consumes:
        - application/json
      parameters:
        - in: path
          name: payment_id
          required: true
          type: string
          format: uuid
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentUpdate'
      responses:
        200:
          description: Платёж обновлён
          schema:
            $ref: '#/definitions/Payment'
        400:
          description: Ошибка валидации
        404:
          description: Платёж не найден

    delete:
      tags: [Payments]
      summary: Удалить платёж
      parameters:
        - in: path
          name: payment_id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Платёж удалён
        404:
          description: Платёж не найден

definitions:
  Payment:
    type: object
    properties:
      id:
        type: string
        format: uuid
      status:
        type: string
        enum: [PENDING, COMPLETED, REJECTED]
      created_at:
        type: string
        format: date-time
      amount:
        type: number
      currency:
        type: string
        enum: [RUB, USD, EUR]
      recipient:
        type: string
      account_id:
        type: string
        format: uuid
    required: [id, status, created_at, amount, currency, recipient, account_id]

  PaymentInput:
    type: object
    properties:
      amount:
        type: number
        minimum: 0.01
      currency:
        type: string
        enum: [RUB, USD, EUR]
      recipient:
        type: string
      account_id:
        type: string
        format: uuid
    required: [amount, currency, recipient, account_id]

  PaymentUpdate:
    type: object
    properties:
      amount:
        type: number
        minimum: 0.01
      currency:
        type: string
        enum: [RUB, USD, EUR]
      recipient:
        type: string
    required: [amount, currency, recipient]
